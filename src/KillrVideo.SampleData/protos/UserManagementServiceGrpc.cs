// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user-management/user_management_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace KillrVideo.UserManagement {
  public static class UserManagementService
  {
    static readonly string __ServiceName = "killrvideo.user_management.UserManagementService";

    static readonly Marshaller<global::KillrVideo.UserManagement.CreateUserRequest> __Marshaller_CreateUserRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.UserManagement.CreateUserRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.UserManagement.CreateUserResponse> __Marshaller_CreateUserResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.UserManagement.CreateUserResponse.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.UserManagement.VerifyCredentialsRequest> __Marshaller_VerifyCredentialsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.UserManagement.VerifyCredentialsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.UserManagement.VerifyCredentialsResponse> __Marshaller_VerifyCredentialsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.UserManagement.VerifyCredentialsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.UserManagement.GetUserProfileRequest> __Marshaller_GetUserProfileRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.UserManagement.GetUserProfileRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.UserManagement.GetUserProfileResponse> __Marshaller_GetUserProfileResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.UserManagement.GetUserProfileResponse.Parser.ParseFrom);

    static readonly Method<global::KillrVideo.UserManagement.CreateUserRequest, global::KillrVideo.UserManagement.CreateUserResponse> __Method_CreateUser = new Method<global::KillrVideo.UserManagement.CreateUserRequest, global::KillrVideo.UserManagement.CreateUserResponse>(
        MethodType.Unary,
        __ServiceName,
        "CreateUser",
        __Marshaller_CreateUserRequest,
        __Marshaller_CreateUserResponse);

    static readonly Method<global::KillrVideo.UserManagement.VerifyCredentialsRequest, global::KillrVideo.UserManagement.VerifyCredentialsResponse> __Method_VerifyCredentials = new Method<global::KillrVideo.UserManagement.VerifyCredentialsRequest, global::KillrVideo.UserManagement.VerifyCredentialsResponse>(
        MethodType.Unary,
        __ServiceName,
        "VerifyCredentials",
        __Marshaller_VerifyCredentialsRequest,
        __Marshaller_VerifyCredentialsResponse);

    static readonly Method<global::KillrVideo.UserManagement.GetUserProfileRequest, global::KillrVideo.UserManagement.GetUserProfileResponse> __Method_GetUserProfile = new Method<global::KillrVideo.UserManagement.GetUserProfileRequest, global::KillrVideo.UserManagement.GetUserProfileResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetUserProfile",
        __Marshaller_GetUserProfileRequest,
        __Marshaller_GetUserProfileResponse);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::KillrVideo.UserManagement.UserManagementServiceReflection.Descriptor.Services[0]; }
    }

    // client interface
    public interface IUserManagementServiceClient
    {
      global::KillrVideo.UserManagement.CreateUserResponse CreateUser(global::KillrVideo.UserManagement.CreateUserRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.UserManagement.CreateUserResponse CreateUser(global::KillrVideo.UserManagement.CreateUserRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.UserManagement.CreateUserResponse> CreateUserAsync(global::KillrVideo.UserManagement.CreateUserRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.UserManagement.CreateUserResponse> CreateUserAsync(global::KillrVideo.UserManagement.CreateUserRequest request, CallOptions options);
      global::KillrVideo.UserManagement.VerifyCredentialsResponse VerifyCredentials(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.UserManagement.VerifyCredentialsResponse VerifyCredentials(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.UserManagement.VerifyCredentialsResponse> VerifyCredentialsAsync(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.UserManagement.VerifyCredentialsResponse> VerifyCredentialsAsync(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, CallOptions options);
      global::KillrVideo.UserManagement.GetUserProfileResponse GetUserProfile(global::KillrVideo.UserManagement.GetUserProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.UserManagement.GetUserProfileResponse GetUserProfile(global::KillrVideo.UserManagement.GetUserProfileRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.UserManagement.GetUserProfileResponse> GetUserProfileAsync(global::KillrVideo.UserManagement.GetUserProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.UserManagement.GetUserProfileResponse> GetUserProfileAsync(global::KillrVideo.UserManagement.GetUserProfileRequest request, CallOptions options);
    }

    // server-side interface
    public interface IUserManagementService
    {
      Task<global::KillrVideo.UserManagement.CreateUserResponse> CreateUser(global::KillrVideo.UserManagement.CreateUserRequest request, ServerCallContext context);
      Task<global::KillrVideo.UserManagement.VerifyCredentialsResponse> VerifyCredentials(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, ServerCallContext context);
      Task<global::KillrVideo.UserManagement.GetUserProfileResponse> GetUserProfile(global::KillrVideo.UserManagement.GetUserProfileRequest request, ServerCallContext context);
    }

    // client stub
    public class UserManagementServiceClient : ClientBase, IUserManagementServiceClient
    {
      public UserManagementServiceClient(Channel channel) : base(channel)
      {
      }
      public global::KillrVideo.UserManagement.CreateUserResponse CreateUser(global::KillrVideo.UserManagement.CreateUserRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateUser, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.UserManagement.CreateUserResponse CreateUser(global::KillrVideo.UserManagement.CreateUserRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateUser, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.UserManagement.CreateUserResponse> CreateUserAsync(global::KillrVideo.UserManagement.CreateUserRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_CreateUser, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.UserManagement.CreateUserResponse> CreateUserAsync(global::KillrVideo.UserManagement.CreateUserRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_CreateUser, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::KillrVideo.UserManagement.VerifyCredentialsResponse VerifyCredentials(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_VerifyCredentials, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.UserManagement.VerifyCredentialsResponse VerifyCredentials(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_VerifyCredentials, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.UserManagement.VerifyCredentialsResponse> VerifyCredentialsAsync(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_VerifyCredentials, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.UserManagement.VerifyCredentialsResponse> VerifyCredentialsAsync(global::KillrVideo.UserManagement.VerifyCredentialsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_VerifyCredentials, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::KillrVideo.UserManagement.GetUserProfileResponse GetUserProfile(global::KillrVideo.UserManagement.GetUserProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetUserProfile, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.UserManagement.GetUserProfileResponse GetUserProfile(global::KillrVideo.UserManagement.GetUserProfileRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetUserProfile, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.UserManagement.GetUserProfileResponse> GetUserProfileAsync(global::KillrVideo.UserManagement.GetUserProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetUserProfile, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.UserManagement.GetUserProfileResponse> GetUserProfileAsync(global::KillrVideo.UserManagement.GetUserProfileRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetUserProfile, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(IUserManagementService serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_CreateUser, serviceImpl.CreateUser)
          .AddMethod(__Method_VerifyCredentials, serviceImpl.VerifyCredentials)
          .AddMethod(__Method_GetUserProfile, serviceImpl.GetUserProfile).Build();
    }

    // creates a new client
    public static UserManagementServiceClient NewClient(Channel channel)
    {
      return new UserManagementServiceClient(channel);
    }

  }
}
#endregion
