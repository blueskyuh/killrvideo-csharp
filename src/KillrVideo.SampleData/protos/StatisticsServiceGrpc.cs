// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: statistics/statistics_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace KillrVideo.Statistics {
  public static class StatisticsService
  {
    static readonly string __ServiceName = "killrvideo.statistics.StatisticsService";

    static readonly Marshaller<global::KillrVideo.Statistics.RecordPlaybackStartedRequest> __Marshaller_RecordPlaybackStartedRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Statistics.RecordPlaybackStartedRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.Statistics.RecordPlaybackStartedResponse> __Marshaller_RecordPlaybackStartedResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Statistics.RecordPlaybackStartedResponse.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.Statistics.GetNumberOfPlaysRequest> __Marshaller_GetNumberOfPlaysRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Statistics.GetNumberOfPlaysRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.Statistics.GetNumberOfPlaysResponse> __Marshaller_GetNumberOfPlaysResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Statistics.GetNumberOfPlaysResponse.Parser.ParseFrom);

    static readonly Method<global::KillrVideo.Statistics.RecordPlaybackStartedRequest, global::KillrVideo.Statistics.RecordPlaybackStartedResponse> __Method_RecordPlaybackStarted = new Method<global::KillrVideo.Statistics.RecordPlaybackStartedRequest, global::KillrVideo.Statistics.RecordPlaybackStartedResponse>(
        MethodType.Unary,
        __ServiceName,
        "RecordPlaybackStarted",
        __Marshaller_RecordPlaybackStartedRequest,
        __Marshaller_RecordPlaybackStartedResponse);

    static readonly Method<global::KillrVideo.Statistics.GetNumberOfPlaysRequest, global::KillrVideo.Statistics.GetNumberOfPlaysResponse> __Method_GetNumberOfPlays = new Method<global::KillrVideo.Statistics.GetNumberOfPlaysRequest, global::KillrVideo.Statistics.GetNumberOfPlaysResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetNumberOfPlays",
        __Marshaller_GetNumberOfPlaysRequest,
        __Marshaller_GetNumberOfPlaysResponse);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::KillrVideo.Statistics.StatisticsServiceReflection.Descriptor.Services[0]; }
    }

    // client interface
    public interface IStatisticsServiceClient
    {
      global::KillrVideo.Statistics.RecordPlaybackStartedResponse RecordPlaybackStarted(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.Statistics.RecordPlaybackStartedResponse RecordPlaybackStarted(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.Statistics.RecordPlaybackStartedResponse> RecordPlaybackStartedAsync(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.Statistics.RecordPlaybackStartedResponse> RecordPlaybackStartedAsync(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, CallOptions options);
      global::KillrVideo.Statistics.GetNumberOfPlaysResponse GetNumberOfPlays(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.Statistics.GetNumberOfPlaysResponse GetNumberOfPlays(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.Statistics.GetNumberOfPlaysResponse> GetNumberOfPlaysAsync(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.Statistics.GetNumberOfPlaysResponse> GetNumberOfPlaysAsync(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, CallOptions options);
    }

    // server-side interface
    public interface IStatisticsService
    {
      Task<global::KillrVideo.Statistics.RecordPlaybackStartedResponse> RecordPlaybackStarted(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, ServerCallContext context);
      Task<global::KillrVideo.Statistics.GetNumberOfPlaysResponse> GetNumberOfPlays(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, ServerCallContext context);
    }

    // client stub
    public class StatisticsServiceClient : ClientBase, IStatisticsServiceClient
    {
      public StatisticsServiceClient(Channel channel) : base(channel)
      {
      }
      public global::KillrVideo.Statistics.RecordPlaybackStartedResponse RecordPlaybackStarted(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_RecordPlaybackStarted, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.Statistics.RecordPlaybackStartedResponse RecordPlaybackStarted(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_RecordPlaybackStarted, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Statistics.RecordPlaybackStartedResponse> RecordPlaybackStartedAsync(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_RecordPlaybackStarted, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Statistics.RecordPlaybackStartedResponse> RecordPlaybackStartedAsync(global::KillrVideo.Statistics.RecordPlaybackStartedRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_RecordPlaybackStarted, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::KillrVideo.Statistics.GetNumberOfPlaysResponse GetNumberOfPlays(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetNumberOfPlays, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.Statistics.GetNumberOfPlaysResponse GetNumberOfPlays(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetNumberOfPlays, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Statistics.GetNumberOfPlaysResponse> GetNumberOfPlaysAsync(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetNumberOfPlays, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Statistics.GetNumberOfPlaysResponse> GetNumberOfPlaysAsync(global::KillrVideo.Statistics.GetNumberOfPlaysRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetNumberOfPlays, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(IStatisticsService serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_RecordPlaybackStarted, serviceImpl.RecordPlaybackStarted)
          .AddMethod(__Method_GetNumberOfPlays, serviceImpl.GetNumberOfPlays).Build();
    }

    // creates a new client
    public static StatisticsServiceClient NewClient(Channel channel)
    {
      return new StatisticsServiceClient(channel);
    }

  }
}
#endregion
