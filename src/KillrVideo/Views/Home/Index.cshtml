@{
    ViewBag.Title = "Home Page";
}

@section htmlhead
{
    <style type="text/css">
        #recent-videos > h2, #my-videos > h2 {
            font-weight: bold;
        }
    </style>
}

<div id="recent-videos" data-bind="module: { name: 'app/shared/video-preview-list', data: recentVideosList }">
    <h2>Recently Added Videos</h2>
    
    <!-- Loading Icon -->
    <h4 data-bind="visible: videos.inProgress">
        <i class="fa fa-spinner fa-spin"></i> Loading...
    </h4>
    
    <!-- Video Grid of Results -->
    <div data-bind="visible: !videos.inProgress(), foreach: { data: videosGrouped, as: 'group' }">
        <div class="row" data-bind="foreach: { data: group, as: 'videopreview' }">
            <div class="col-md-3" data-bind="template: { name: 'app/shared/video-preview', data: videopreview }">
            </div>
        </div>
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div id="my-videos" data-bind="module: { name: 'app/shared/video-preview-list', data: myVideosList }">
        <h2>My Videos</h2>
        
        <!-- Loading Icon -->
        <h4 data-bind="visible: videos.inProgress">
            <i class="fa fa-spinner fa-spin"></i> Loading...
        </h4>
        
        <!-- Video Grid of Results -->
        <div data-bind="visible: !videos.inProgress(), foreach: { data: videosGrouped, as: 'group' }">
            <div class="row" data-bind="foreach: { data: group, as: 'videopreview' }">
                <div class="col-md-3" data-bind="template: { name: 'app/shared/video-preview', data: videopreview }">
                </div>
            </div>
        </div>

    </div>
    
}


@section scripts
{
    <script type="text/javascript">
        require(["knockout", "jquery", "knockout-amd-helpers", "text", "domReady!"], function(ko, $) {
            // Just use a simple object as the model for the page and apply bindings to page sections
            var pageModel = {
                // Videos by user can be paged, but we are just showing a single page of 4 records here
                myVideosList: {
                    url: '@Url.Action("ByUser", "Videos")',
                    pageSize: 4,
                    groupSize: 4
                },
                // Recent videos we need to tell it how many recent videos to retrieve
                recentVideosList: {
                    url: '@Url.Action("Recent", "Videos")',
                    pageSize: 8,
                    groupSize: 4
                }
            };

            $("#my-videos, #recent-videos").each(function(idx, el) {
                ko.applyBindings(pageModel, el);
            });
        });
    </script>
}
