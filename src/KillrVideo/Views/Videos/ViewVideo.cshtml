@using KillrVideo.Authentication
@using KillrVideo.Data
@model KillrVideo.Models.Videos.ViewVideoViewModel

@{
    ViewBag.Title = "View Video";
}

@section htmlhead
{
    <style type="text/css">
        #main-video {
            padding-left: 30px;
            padding-top: 20px;
            -webkit-box-shadow: -15px 0 15px -15px #CCCCCC;
            box-shadow: -15px 0 15px -15px #CCCCCC;
        }

        #related-videos > h3 {
            font-weight: bold;
        }
    </style>
}

<div id="view-video">
    <div class="row">
        <div class="col-md-9 col-md-push-3">
            <div id="main-video">
                <div class="embed-responsive embed-responsive-16by9">
                    @switch (Model.LocationType)
                    {
                        case VideoLocationType.YouTube:
                            <!-- Add YouTube iframe embed -->
                            <iframe src="http://www.youtube.com/embed/@Model.Location" class="embed-responsive-item"></iframe>
                            break;
                        case VideoLocationType.Upload:
                            <!-- Use videojs to playback HTML5 video -->
                            <video id="the-video" class="video-js vjs-default-skin embed-responsive-item" controls preload="auto" width="auto" height="auto" data-setup="">
                                <source src="@Model.Location" type='video/mp4' />
                                <p class="vjs-no-js">To view this video please enable JavaScript, and consider upgrading to a web browser that <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a></p>
                            </video>
                            break;
                        default:
                            throw new ArgumentOutOfRangeException();
                    }
                </div>
                
                <h2>@Model.Title</h2>
                <p>
                    @Model.Description
                </p>

                <div class="row">
                    <!-- Video star ratings -->
                    <div class="col-md-6">
                        <div id="view-video-rating" data-bind="module : { name: 'app/videos/star-rating', data: videoId }">
                            <span class="video-rating" data-bind="foreach: availableRatings, css: { 'video-rating-enabled': ratingEnabled }">
                                <span class="star" data-bind="css: { filled: $parent.displayRating() >= $data, highlighted: $parent.proposedRating() >= $data }, event: { click: $parent.rateVideo, mouseover: $parent.trackProposedRating, mouseout: $parent.resetProposedRating }"></span>
                            </span>
                            <span class="label label-info">
                                <span data-bind="visible: currentUserRating() > 0">You: <span data-bind="text: currentUserRating"></span> stars, </span>
                                Average: <span data-bind="text: averageRating"></span> (<span data-bind="text: ratingsCount"></span> ratings)
                            </span>
                        </div>
                    </div>

                    <!-- Video tags -->
                    <div class="col-md-6">
                        <div id="view-video-tags" class="text-right">
                            @foreach (var tag in Model.Tags)
                            {
                                <a class="label label-default" href="@Url.Action("Results", "Search", new { tag })">@tag</a>
                            }
                        </div>
                    </div>
                </div>
                
                <div data-bind="module: { name: 'app/comments/video-comments', data: videoId }">
                    <!-- Add a Comment -->
                    <h3>Add a Comment</h3>
                    @if (User.GetCurrentUserId() != null)
                    {
                        <p class="bg-success uimessage" style="display: none" data-bind="visible: newCommentAdded">
                            Comment added successfully.  <a href="" data-bind="click: resetForNewComment">Click here</a> to add another.
                        </p>
                        
                        <form role="form" data-bind="submit: addComment, visible: !newCommentAdded()">
                            <div class="form-group">
                                <textarea data-bind="value: newComment, valueUpdate: 'input'" class="form-control" rows="3"></textarea>
                            </div>
                            <div class="text-right">
                                <button type="submit" class="btn btn-primary" data-bind="disable: addingComment">
                                    <i class="fa fa-cog fa-spin" style="display: none" data-bind="visible: addingComment"></i> Add Comment
                                </button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <p>
                            You must <a href="@Url.Action("Register", "Account")">register</a> or <a href="@Url.Action("SignIn", "Account")">sign in</a> to post comments.
                        </p>
                    }

                    <!-- View Comments -->
                    <h3>Latest Comments</h3>
                    <ul data-bind="foreach: { data: comments, as: 'singleComment' }" class="video-comments list-unstyled">
                        <li class="clearfix">
                            <div class="pull-left text-center">
                                <a data-bind="attr: { href: singleComment.userProfileUrl }">
                                    <img data-bind="attr: { src: singleComment.userGravatarImageUrl }" class="img-rounded" />
                                </a>
                            </div>

                            <a data-bind="attr: { href: singleComment.userProfileUrl }">
                                <span data-bind="text: singleComment.userFirstName"></span> <span data-bind="text: singleComment.userLastName"></span>
                            </a>
                            <small data-bind="text: singleComment.commentTimestampAgo" class="text-muted"></small><br />

                            <span data-bind="text: singleComment.comment"></span>
                        </li>
                    </ul>
                    <button type="button" data-bind="visible: morePagesAvailable, disable: loadingNextPage, click: loadNextPage" 
                            class="btn btn-default btn-block clearfix">
                        <i data-bind="visible: loadingNextPage" class="fa fa-cog fa-spin"></i> Load more comments
                    </button>
                </div>
            </div>
        </div>
        <!-- Related videos -->
        <div class="col-md-3 col-md-pull-9" id="related-videos" data-bind="module: { name: 'app/shared/video-preview-list', data: relatedVideosList }">
            <h3>Related Videos</h3>

            <h4 data-bind="visible: videos.inProgress">
                <i class="fa fa-spinner fa-spin"></i> Loading...
            </h4>

            <div data-bind="visible: !videos.inProgress(), template: { name: 'app/shared/video-preview', foreach: videos }">
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        require(["knockout", "jquery", "videojs", "knockout-amd-helpers", "text", "domReady!"], function (ko, $) {
            // Just use a simple object as the model for the page and apply bindings
            ko.applyBindings({
                videoId: '@Model.VideoId',
                relatedVideosList: {
                    url: '@Url.Action("Related", "Videos")',
                    ajaxData: {
                        videoId: '@Model.VideoId'
                    }
                }
            }, $("#view-video").get(0));
        });
    </script>
}
