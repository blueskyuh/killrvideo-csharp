@using System
@using KillrVideo.Data
@model KillrVideo.Models.Videos.ViewVideoViewModel

@{
    ViewBag.Title = "View Video";
    ViewBag.RequireJsMain = "app/videos/view";
}

<div class="row">
    <div class="col-md-7 col-xs-12 view-video-embed">
        <!-- The video -->
        <div class="embed-responsive embed-responsive-16by9">
            @if (Model.InProgress)
            {
                <video-upload-status params="jobId: '@Model.InProgressJobId'"></video-upload-status>
            }
            else
            {
                switch (Model.LocationType)
                {
                    case VideoLocationType.YouTube:
                        <!-- Add YouTube iframe embed -->
                        <iframe src="http://www.youtube.com/embed/@Model.Location" class="embed-responsive-item"></iframe>
                        break;
                    case VideoLocationType.Upload:
                        <!-- Use videojs to playback HTML5 video -->
                        <video id="the-video" class="video-js vjs-default-skin embed-responsive-item" controls preload="auto" width="auto" height="auto" data-setup="">
                            <source src="@Model.Location" type='video/mp4' />
                            <p class="vjs-no-js">To view this video please enable JavaScript, and consider upgrading to a web browser that <a href="http://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a></p>
                        </video>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            }
        </div>
    </div>
    <div class="col-md-5 col-xs-12 view-video-details" data-bind="perfectScrollbar: { includePadding: true }">
        <h3 id="view-video-title">@Model.Title</h3>

        <!-- Star ratings and sharing -->
        <video-star-rating params="videoId: '@Model.VideoId'"></video-star-rating>

        <!-- Author and tags -->
        <div class="row">
            <div class="col-xs-5 video-author">
                <a href="@Url.Action("Info", "Account", new { userId = Model.Author.UserId })">
                    <img src="https://secure.gravatar.com/avatar/@Model.Author.GravatarHash"
                         alt="Gravatar for @Model.Author.EmailAddress" class="user-gravatar" />
                </a>
                by:<br />
                <a href="@Url.Action("Info", "Account", new { userId = Model.Author.UserId })">@Model.Author.FirstName @Model.Author.LastName</a>
            </div>
            <div class="col-xs-7 video-tags">
                <div class="text-right">
                    @foreach (var tag in Model.Tags)
                    {
                        <a class="label label-default" href="@Url.Action("Results", "Search", new { tag })">@tag</a>
                    }
                </div>
            </div>
        </div>

        <p>
            @Model.Description
        </p>

        <!-- Video Comments -->
        <video-comments params="videoId: '@Model.VideoId', isLoggedIn: @(User.Identity.IsAuthenticated.ToString().ToLowerInvariant())"></video-comments>
        
    </div>
</div>

<!-- Related videos -->
<video-preview-list params="url: '/videos/related', ajaxData: { videoId: '@Model.VideoId' }"></video-preview-list>
