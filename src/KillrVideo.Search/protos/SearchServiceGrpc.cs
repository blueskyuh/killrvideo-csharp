// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search/search_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace KillrVideo.Search {
  public static class SearchService
  {
    static readonly string __ServiceName = "killrvideo.search.SearchService";

    static readonly Marshaller<global::KillrVideo.Search.SearchVideosRequest> __Marshaller_SearchVideosRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Search.SearchVideosRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.Search.SearchVideosResponse> __Marshaller_SearchVideosResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Search.SearchVideosResponse.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.Search.GetQuerySuggestionsRequest> __Marshaller_GetQuerySuggestionsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Search.GetQuerySuggestionsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::KillrVideo.Search.GetQuerySuggestionsResponse> __Marshaller_GetQuerySuggestionsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::KillrVideo.Search.GetQuerySuggestionsResponse.Parser.ParseFrom);

    static readonly Method<global::KillrVideo.Search.SearchVideosRequest, global::KillrVideo.Search.SearchVideosResponse> __Method_SearchVideos = new Method<global::KillrVideo.Search.SearchVideosRequest, global::KillrVideo.Search.SearchVideosResponse>(
        MethodType.Unary,
        __ServiceName,
        "SearchVideos",
        __Marshaller_SearchVideosRequest,
        __Marshaller_SearchVideosResponse);

    static readonly Method<global::KillrVideo.Search.GetQuerySuggestionsRequest, global::KillrVideo.Search.GetQuerySuggestionsResponse> __Method_GetQuerySuggestions = new Method<global::KillrVideo.Search.GetQuerySuggestionsRequest, global::KillrVideo.Search.GetQuerySuggestionsResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetQuerySuggestions",
        __Marshaller_GetQuerySuggestionsRequest,
        __Marshaller_GetQuerySuggestionsResponse);

    // service descriptor
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::KillrVideo.Search.SearchServiceReflection.Descriptor.Services[0]; }
    }

    // client interface
    public interface ISearchServiceClient
    {
      global::KillrVideo.Search.SearchVideosResponse SearchVideos(global::KillrVideo.Search.SearchVideosRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.Search.SearchVideosResponse SearchVideos(global::KillrVideo.Search.SearchVideosRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.Search.SearchVideosResponse> SearchVideosAsync(global::KillrVideo.Search.SearchVideosRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.Search.SearchVideosResponse> SearchVideosAsync(global::KillrVideo.Search.SearchVideosRequest request, CallOptions options);
      global::KillrVideo.Search.GetQuerySuggestionsResponse GetQuerySuggestions(global::KillrVideo.Search.GetQuerySuggestionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      global::KillrVideo.Search.GetQuerySuggestionsResponse GetQuerySuggestions(global::KillrVideo.Search.GetQuerySuggestionsRequest request, CallOptions options);
      AsyncUnaryCall<global::KillrVideo.Search.GetQuerySuggestionsResponse> GetQuerySuggestionsAsync(global::KillrVideo.Search.GetQuerySuggestionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken));
      AsyncUnaryCall<global::KillrVideo.Search.GetQuerySuggestionsResponse> GetQuerySuggestionsAsync(global::KillrVideo.Search.GetQuerySuggestionsRequest request, CallOptions options);
    }

    // server-side interface
    public interface ISearchService
    {
      Task<global::KillrVideo.Search.SearchVideosResponse> SearchVideos(global::KillrVideo.Search.SearchVideosRequest request, ServerCallContext context);
      Task<global::KillrVideo.Search.GetQuerySuggestionsResponse> GetQuerySuggestions(global::KillrVideo.Search.GetQuerySuggestionsRequest request, ServerCallContext context);
    }

    // client stub
    public class SearchServiceClient : ClientBase, ISearchServiceClient
    {
      public SearchServiceClient(Channel channel) : base(channel)
      {
      }
      public global::KillrVideo.Search.SearchVideosResponse SearchVideos(global::KillrVideo.Search.SearchVideosRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_SearchVideos, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.Search.SearchVideosResponse SearchVideos(global::KillrVideo.Search.SearchVideosRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_SearchVideos, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Search.SearchVideosResponse> SearchVideosAsync(global::KillrVideo.Search.SearchVideosRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_SearchVideos, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Search.SearchVideosResponse> SearchVideosAsync(global::KillrVideo.Search.SearchVideosRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_SearchVideos, options);
        return Calls.AsyncUnaryCall(call, request);
      }
      public global::KillrVideo.Search.GetQuerySuggestionsResponse GetQuerySuggestions(global::KillrVideo.Search.GetQuerySuggestionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetQuerySuggestions, new CallOptions(headers, deadline, cancellationToken));
        return Calls.BlockingUnaryCall(call, request);
      }
      public global::KillrVideo.Search.GetQuerySuggestionsResponse GetQuerySuggestions(global::KillrVideo.Search.GetQuerySuggestionsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetQuerySuggestions, options);
        return Calls.BlockingUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Search.GetQuerySuggestionsResponse> GetQuerySuggestionsAsync(global::KillrVideo.Search.GetQuerySuggestionsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        var call = CreateCall(__Method_GetQuerySuggestions, new CallOptions(headers, deadline, cancellationToken));
        return Calls.AsyncUnaryCall(call, request);
      }
      public AsyncUnaryCall<global::KillrVideo.Search.GetQuerySuggestionsResponse> GetQuerySuggestionsAsync(global::KillrVideo.Search.GetQuerySuggestionsRequest request, CallOptions options)
      {
        var call = CreateCall(__Method_GetQuerySuggestions, options);
        return Calls.AsyncUnaryCall(call, request);
      }
    }

    // creates service definition that can be registered with a server
    public static ServerServiceDefinition BindService(ISearchService serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder(__ServiceName)
          .AddMethod(__Method_SearchVideos, serviceImpl.SearchVideos)
          .AddMethod(__Method_GetQuerySuggestions, serviceImpl.GetQuerySuggestions).Build();
    }

    // creates a new client
    public static SearchServiceClient NewClient(Channel channel)
    {
      return new SearchServiceClient(channel);
    }

  }
}
#endregion
